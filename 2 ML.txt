import pandas as pd 
import numpy as np 
import seaborn as sns
import matplotlib.pyplot as plt 
%matplotlib inline 
import warnings 
warnings.filterwarnings ('ignore') 
from sklearn.model_selection import train_test_split 
from sklearn.svm import SVC 
from sklearn import metrics
from sklearn.neighbors import KNeighborsClassifier

df=pd.read_csv('/content/emails.csv')

df.head()

df.columns

df.isnull().sum()

df.dropna(inplace=True)

df.drop(['Email No.'], axis=1, inplace=True) 
X=df.drop(['Prediction'], axis = 1) 
Y=df['Prediction']

from sklearn.preprocessing import scale
X=scale(X)
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=1)


KN = KNeighborsClassifier
knn = KN(n_neighbors=7)
knn.fit(x_train, y_train)
y_pred = knn.predict(x_test)
print("Prediction: \n")
print(y_pred)


print("KNN accuracy = ",metrics.accuracy_score(y_test,y_pred))

print("Confusion matrix\n", metrics.confusion_matrix(y_test,y_pred))

model = SVC(C = 1)
#fit 
model.fit(x_train, y_train)
# predict
y_pred = model.predict(x_test)

metrics.confusion_matrix(y_true=y_test, y_pred=y_pred)

print("SVM accuracy = ",metrics.accuracy_score(y_test,y_pred))
